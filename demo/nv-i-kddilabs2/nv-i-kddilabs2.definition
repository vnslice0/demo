{"sliverTotalCnt":8,"vvLinkTotalCnt":7,"vportTotalCnt":0,"sliceName":"","nsList":[{"id":"ns0","name":"NS1:VN1","blkList":[{"id":"ns0_bk0","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":3,"cx":20,"cy":2,"id":"ns0_bk0_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns0_bk0_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]},{"id":"ns0_bk1","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth2)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns0_bk1_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns0_bk1_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns0_bk1_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns0_bk1_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns0_bk2","name":"FromDevice","instanceName":"FromDevice1","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth1)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns0_bk2_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns0_bk2_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns0_bk2_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns0_bk2_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns0_bk3","name":"FromDevice","instanceName":"FromDevice2","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth3)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns0_bk3_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns0_bk3_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns0_bk3_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns0_bk3_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]}],"blkTotalCnt":4,"vpoList":[{"id":"ns0_vp0","name":"eth1","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"left","role":"nsvport"}],"mac":"12:08:d7:d0:77:85"},{"id":"ns0_vp1","name":"eth2","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"right","role":"nsvport"}],"mac":"12:dd:46:bf:5c:9c"},{"id":"ns0_vp2","name":"eth3","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"top","role":"nsvport"}],"mac":"12:10:d1:ca:77:07"}],"vpoTotalCnt":3,"lnkList":[{"id":"ns0_link0","sourceId":"ns0_bk1","targetId":"ns0_bk0","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns0_link1","sourceId":"ns0_bk1","targetId":"ns0_vp1","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns0_link2","sourceId":"ns0_bk2","targetId":"ns0_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns0_link3","sourceId":"ns0_bk2","targetId":"ns0_bk0","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns0_link4","sourceId":"ns0_bk3","targetId":"ns0_bk0","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns0_link5","sourceId":"ns0_bk3","targetId":"ns0_vp2","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"}],"lnkTotalCnt":6,"sliceName":"","hostname":""},{"id":"ns1","name":"NS2:VN2","blkList":[{"id":"ns1_bk3","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth2)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns1_bk3_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns1_bk3_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns1_bk3_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns1_bk3_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns1_bk4","name":"FromDevice","instanceName":"FromDevice1","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth1)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns1_bk4_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns1_bk4_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns1_bk4_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns1_bk4_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns1_bk5","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":2,"cx":20,"cy":2,"id":"ns1_bk5_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns1_bk5_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]}],"blkTotalCnt":6,"vpoList":[{"id":"ns1_vp0","name":"eth1","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"left","role":"nsvport"}],"mac":"12:be:87:d0:77:85"},{"id":"ns1_vp1","name":"eth2","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"right","role":"nsvport"}],"mac":"12:44:c5:bf:5c:9c"}],"vpoTotalCnt":2,"lnkList":[{"id":"ns1_link1","sourceId":"ns1_bk3","targetId":"ns1_vp1","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns1_link2","sourceId":"ns1_bk4","targetId":"ns1_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns1_link4","sourceId":"ns1_bk3","targetId":"ns1_bk5","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns1_link5","sourceId":"ns1_bk4","targetId":"ns1_bk5","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"}],"lnkTotalCnt":6,"sliceName":"","hostname":""},{"id":"ns2","name":"NS3:VN3","blkList":[{"id":"ns2_bk0","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":20,"cy":2,"id":"ns2_bk0_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns2_bk0_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]},{"id":"ns2_bk1","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth1)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns2_bk1_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns2_bk1_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns2_bk1_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns2_bk1_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]}],"blkTotalCnt":2,"vpoList":[{"id":"ns2_vp0","name":"eth1","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"bottom","role":"nsvport"}],"mac":"12:b8:4e:d0:77:85"}],"vpoTotalCnt":1,"lnkList":[{"id":"ns2_link0","sourceId":"ns2_bk1","targetId":"ns2_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns2_link1","sourceId":"ns2_bk1","targetId":"ns2_bk0","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"}],"lnkTotalCnt":2,"sliceName":"","hostname":""},{"id":"ns3","name":"NS3:VN4","blkList":[{"id":"ns3_bk0","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(eth1)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns3_bk0_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns3_bk0_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns3_bk0_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns3_bk0_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns3_bk1","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":20,"cy":2,"id":"ns3_bk1_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns3_bk1_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]}],"blkTotalCnt":2,"vpoList":[{"id":"ns3_vp0","name":"eth1","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"bottom","role":"nsvport"}],"mac":"12:c0:9c:d0:77:85"}],"vpoTotalCnt":1,"lnkList":[{"id":"ns3_link0","sourceId":"ns3_bk0","targetId":"ns3_bk1","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns3_link1","sourceId":"ns3_bk0","targetId":"ns3_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"}],"lnkTotalCnt":2,"sliceName":"","hostname":""},{"id":"ns4","name":"PG:NS:PN1","blkList":[{"id":"ns4_bk0","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(vlan343)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns4_bk0_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns4_bk0_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns4_bk0_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns4_bk0_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns4_bk1","name":"FromDevice","instanceName":"FromDevice1","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(vlan350)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns4_bk1_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns4_bk1_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns4_bk1_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns4_bk1_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]},{"id":"ns4_bk2","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":2,"cx":20,"cy":2,"id":"ns4_bk2_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns4_bk2_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]}],"blkTotalCnt":3,"vpoList":[{"id":"ns4_vp0","name":"vlan343","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"right","role":"nsvport"}],"mac":"02:be:9e:fd:74:48"},{"id":"ns4_vp1","name":"vlan350","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"left","role":"nsvport"}],"mac":"02:11:ae:85:a4:e2"},{"id":"ns4_vp2","name":"vlan344","ports":[{"connCount":0,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"top","role":"nsvport"}],"mac":"02:23:1f:16:c6:ce"}],"vpoTotalCnt":3,"lnkList":[{"id":"ns4_link0","sourceId":"ns4_bk0","targetId":"ns4_bk2","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns4_link1","sourceId":"ns4_bk0","targetId":"ns4_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns4_link2","sourceId":"ns4_bk1","targetId":"ns4_vp1","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"},{"id":"ns4_link3","sourceId":"ns4_bk1","targetId":"ns4_bk2","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"}],"lnkTotalCnt":4,"sliceName":"","hostname":"","clickConfigHeader":""},{"id":"ns5","name":"PG:NS:PN2","blkList":[{"id":"ns5_bk0","name":"Cdpf2","instanceName":"Cdpf20","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","clickInfo":"Cdpf2()","blockDefId":"Cdpf2-1.0","orientation":0,"definition":{"name":"Cdpf2","type":"click-user","ver":"1.0","maxInstance":"*","category":"COMPOUND_ELEMENTS","description":"","bgColor":"rgb(255, 255, 255)","clickInfo":"Cdpf2()","isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/COMPOUND_ELEMENTS/Cdpf2/undefined","blockDefId":"Cdpf2-1.0","ports":[{"name":"in0","portIndex":0,"role":"input","processing":"push","val":null,"path":"M 18 0 L 22 0 L 20 4 z","cx":20,"cy":2,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":20,"cy":2,"id":"ns5_bk0_po0","multiplicity":"*","name":"in0","path":"M 18 0 L 22 0 L 20 4 z","portIndex":0,"position":"top","processing":"push","role":"input","val":null,"schemeName":"Click","type":"","highlighted":false}],"isCompound":true,"elementclassText":"elementclass Cdpf2 {\r\n    isIp :: Classifier(12/0800, -);\r\n    isCdpf :: IPClassifier(dst udp port 9876, -);\r\n    Discard0 :: Discard();\r\n    CheckIPHeader0 :: CheckIPHeader(14, CHECKSUM false);\r\n    CheckUDPHeader0 :: CheckUDPHeader(VERBOSE true);\r\n    Cdpf0 :: Cdpf(configfile './cdpf.conf');\r\n\r\n    input -> isIp;\r\n    isIp[1] -> Discard0;\r\n    isCdpf[1] -> Discard0;\r\n    isIp -> CheckIPHeader0;\r\n    CheckIPHeader0 -> CheckUDPHeader0;\r\n    CheckUDPHeader0 -> isCdpf;\r\n    isCdpf -> Cdpf0;\r\n } ","portsTemplate":[{"enable":true,"id":"ns5_bk0_po0","name":"in0","role":"input","processing":"push","multiplicity":"*"}]},{"id":"ns5_bk1","name":"FromDevice","instanceName":"FromDevice0","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","clickInfo":"FromDevice(vlan350)","blockDefId":"FromDevice-1.0","orientation":0,"definition":{"name":"FromDevice","type":"click-user","ver":"1.0","maxInstance":"*","category":"Network_Devices","description":"This manual page describes the Linux kernel module version of the FromDevice\r\nelement. For the user-level element, read the FromDevice.u manual page.\r\nIntercepts all packets received by the Linux network interface named DEVNAME\r\nand pushes them out output 0.  The packets include the link-level header.\r\nDEVNAME may also be an Ethernet address, in which case FromDevice searches for\r\na device with that address.\r\nFromDevice receives packets at interrupt time and stores them in an internal\r\nqueue.  Later, in the Click kernel thread -- that is, not at interrupt time --\r\na FromDevice task emits packets from that queue into the configuration.  It\r\nemits at most BURST packets per task execution; BURST is 8 by default.\r\nKeyword arguments are:\r\n\r\n\r\n PROMISC\r\n Boolean.  If true, the device is put into promiscuous mode while FromDevice is\r\nactive.  Default is false.\r\n\r\n\r\n\r\n\r\n BURST\r\n Unsigned integer.  Sets the BURST parameter.\r\n\r\n\r\n\r\n\r\n TIMESTAMP\r\n Boolean.  If true, then ensure that received packets have correctly-set\r\ntimestamp annotations.  Default is true.\r\n\r\n\r\n\r\n\r\n QUIET\r\n Boolean.  If true, then suppress device up/down messages.  Default is false.\r\n\r\n\r\n\r\n\r\n ALLOW_NONEXISTENT\r\n Allow nonexistent devices. If true, and no device named DEVNAME exists when\r\nthe router is initialized, then FromDevice will report a warning (rather than\r\nan error). Later, while the router is running, if a device named DEVNAME\r\nappears, FromDevice will seamlessly begin outputing its packets. Default is\r\nfalse.\r\n\r\n\r\n\r\n\r\n UP_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ncomes up.\r\n\r\n\r\n\r\n\r\n DOWN_CALL\r\n Write handler.  If supplied, this handler is called when the device or link\r\ngoes down.\r\n\r\n\r\n\r\n\r\n ACTIVE\r\n Boolean.  If false, then FromDevice will not accept packets from the attached\r\ndevice; instead, packets from the device are processed by Linux as usual.\r\nDefault is true.\r\n\r\n\r\n\r\n\r\n ALIGNMENT\r\n Specifies the alignment of packets emitted by this FromDevice, in the form\r\n\"ALIGN OFFSET\", such as \"4 0\".  FromDevice does not process this argument\r\nitself, but the click-align tool parses the argument and uses it in its\r\ncalculations.  The default ALIGNMENT is 4 2.\r\n\r\n\r\n","bgColor":"undefined","clickInfo":"FromDevice(DEVNAME [, keywords PROMISC, BURST, TIMESTAMP...])","elementclassText":"","width":40,"height":18,"rx":2,"ry":2,"id":null,"x":null,"y":null,"imgSrc":"api/GetBlockImgSrcSvg/Network_Devices/FromDevice/undefined","blockDefId":"FromDevice-1.0","ports":[{"name":"out0","portIndex":0,"role":"output","processing":"push","val":null,"path":"M 8 14 L 12 14 L 12 18 L 8 18 z","cx":10,"cy":16,"multiplicity":"*","schemeName":"Click"},{"name":"vport0","portIndex":0,"role":"vport","processing":"*","val":null,"path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","cx":30,"cy":16,"multiplicity":"*","schemeName":"Click"}]},"ports":[{"connCount":1,"cx":10,"cy":16,"id":"ns5_bk1_po0","multiplicity":"*","name":"out0","path":"M 8 14 L 12 14 L 12 18 L 8 18 z","portIndex":0,"position":"bottom","processing":"push","role":"output","val":null,"schemeName":"Click","type":"","highlighted":false},{"connCount":1,"cx":30,"cy":16,"id":"ns5_bk1_po1","multiplicity":"*","name":"vport0","path":"M 30 18 A 2 2 1 1 1 30 14 A 2 2 1 1 1 30 18","portIndex":0,"position":"bottom","processing":"*","role":"vport","val":null,"schemeName":"Click","type":"","highlighted":false}],"elementclassText":"","portsTemplate":[{"enable":true,"id":"ns5_bk1_po0","name":"out0","role":"output","processing":"push","multiplicity":"*"},{"enable":true,"id":"ns5_bk1_po1","name":"vport0","role":"vport","processing":"*","multiplicity":"*"}]}],"blkTotalCnt":2,"vpoList":[{"id":"ns5_vp0","name":"vlan350","ports":[{"connCount":1,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"right","role":"nsvport"}],"mac":"02:4b:19:22:a2:16"},{"id":"ns5_vp1","name":"vlan339","ports":[{"connCount":0,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"left","role":"nsvport"}],"mac":"02:91:fd:b4:a4:d2"}],"vpoTotalCnt":2,"lnkList":[{"id":"ns5_link0","sourceId":"ns5_bk1","targetId":"ns5_bk0","left":false,"right":true,"srcPortIdx":0,"dstPortIdx":0,"className":"link bblink"},{"id":"ns5_link1","sourceId":"ns5_bk1","targetId":"ns5_vp0","left":false,"right":true,"srcPortIdx":1,"dstPortIdx":0,"className":"link bvlink"}],"lnkTotalCnt":2,"sliceName":"","hostname":""},{"id":"ns6","name":"PG:NS:PN3","blkList":[],"blkTotalCnt":0,"vpoList":[{"id":"ns6_vp0","name":"vlan339","ports":[{"connCount":0,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"bottom","role":"nsvport"}],"mac":"02:cb:ba:f5:c1:d8"}],"vpoTotalCnt":1,"lnkList":[],"lnkTotalCnt":0,"sliceName":"","hostname":""},{"id":"ns7","name":"PG:NS:PN4","blkList":[],"blkTotalCnt":0,"vpoList":[{"id":"ns7_vp0","name":"vlan344","ports":[{"connCount":0,"cx":0,"cy":0,"path":"M 4 0 L 8 0 L 6 4 z","position":"bottom","role":"nsvport"}],"mac":"02:8b:93:a8:af:4a"}],"vpoTotalCnt":1,"lnkList":[],"lnkTotalCnt":0,"sliceName":"","hostname":""}],"vvList":[{"id":"vvlink0","sourceId":"ns0","targetId":"ns4","left":false,"right":true,"srcVportId":"ns0_vp0","tgtVportId":"ns4_vp0","className":"link vvlink"},{"id":"vvlink1","sourceId":"ns1","targetId":"ns0","left":false,"right":true,"srcVportId":"ns1_vp0","tgtVportId":"ns0_vp1","className":"link vvlink"},{"id":"vvlink2","sourceId":"ns1","targetId":"ns2","left":false,"right":true,"srcVportId":"ns1_vp1","tgtVportId":"ns2_vp0","className":"link vvlink"},{"id":"vvlink3","sourceId":"ns0","targetId":"ns3","left":false,"right":true,"srcVportId":"ns0_vp2","tgtVportId":"ns3_vp0","className":"link vvlink"},{"id":"vvlink4","sourceId":"ns4","targetId":"ns7","left":false,"right":true,"srcVportId":"ns4_vp2","tgtVportId":"ns7_vp0","className":"link vvlink"},{"id":"vvlink5","sourceId":"ns4","targetId":"ns5","left":false,"right":true,"srcVportId":"ns4_vp1","tgtVportId":"ns5_vp0","className":"link vvlink"},{"id":"vvlink6","sourceId":"ns5","targetId":"ns6","left":false,"right":true,"srcVportId":"ns5_vp1","tgtVportId":"ns6_vp0","className":"link vvlink"}]}